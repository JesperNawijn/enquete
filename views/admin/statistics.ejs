<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/admin.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="admin-container">
        <header class="admin-header">
            <h1>Statistieken</h1>
            <nav>
                <a href="/admin/dashboard" class="nav-link">Dashboard</a>
                <a href="/admin/statistics" class="nav-link active">Statistieken</a>
                <a href="/admin/export" class="nav-link">Export CSV</a>
                <a href="/admin/logout" class="nav-link">Uitloggen</a>
            </nav>
        </header>

        <div class="admin-content">
            <div class="charts-grid">
                <!-- Age Distribution -->
                <div class="chart-container">
                    <h3>Leeftijdsverdeling</h3>
                    <canvas id="ageChart"></canvas>
                </div>

                <!-- Gender Distribution -->
                <div class="chart-container">
                    <h3>Geslachtsverdeling</h3>
                    <canvas id="genderChart"></canvas>
                </div>

                <!-- Country Distribution -->
                <div class="chart-container">
                    <h3>Landenverdeling</h3>
                    <canvas id="countryChart"></canvas>
                </div>

                <!-- Platform Usage -->
                <div class="chart-container">
                    <h3>Platform Gebruik</h3>
                    <canvas id="platformChart"></canvas>
                </div>

                <!-- Social Media Hours -->
                <div class="chart-container">
                    <h3>Sociale Media Uren per Dag</h3>
                    <canvas id="hoursChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Age Distribution Chart
        const ageData = <%- JSON.stringify(stats.ageDistribution || []) %>;
        new Chart(document.getElementById('ageChart'), {
            type: 'bar',
            data: {
                labels: ageData.map(item => item.age + ' jaar'),
                datasets: [{
                    label: 'Aantal responses',
                    data: ageData.map(item => item.count),
                    backgroundColor: 'rgba(54, 162, 235, 0.6)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Gender Distribution Chart
        const genderData = <%- JSON.stringify(stats.genderDistribution || []) %>;
        new Chart(document.getElementById('genderChart'), {
            type: 'pie',
            data: {
                labels: genderData.map(item => item.gender),
                datasets: [{
                    data: genderData.map(item => item.count),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 205, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)'
                    ]
                }]
            },
            options: {
                responsive: true
            }
        });

        // Country Distribution Chart
        const countryData = <%- JSON.stringify(stats.countryDistribution || []) %>;
        new Chart(document.getElementById('countryChart'), {
            type: 'doughnut',
            data: {
                labels: countryData.map(item => item.country),
                datasets: [{
                    data: countryData.map(item => item.count),
                    backgroundColor: [
                        'rgba(255, 159, 64, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)'
                    ]
                }]
            },
            options: {
                responsive: true
            }
        });

        // Platform Usage Chart
        const platformData = <%- JSON.stringify(stats.platformUsage || [{}]) %>[0];
        const platformLabels = Object.keys(platformData || {});
        const platformValues = Object.values(platformData || {});
        
        new Chart(document.getElementById('platformChart'), {
            type: 'bar',
            data: {
                labels: platformLabels,
                datasets: [{
                    label: 'Aantal gebruikers',
                    data: platformValues,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Social Media Hours Chart
        const hoursData = <%- JSON.stringify(stats.socialMediaHours || []) %>;
        const hoursLabels = hoursData.map(item => {
            switch(item.social_media_hours) {
                case 0: return 'Minder dan 1 uur';
                case 1: return '1-2 uur';
                case 3: return '3-4 uur';
                case 5: return '5-6 uur';
                case 7: return 'Meer dan 6 uur';
                default: return item.social_media_hours + ' uur';
            }
        });

        new Chart(document.getElementById('hoursChart'), {
            type: 'line',
            data: {
                labels: hoursLabels,
                datasets: [{
                    label: 'Aantal responses',
                    data: hoursData.map(item => item.count),
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 2,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>
</html>
